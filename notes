
?progdev bf_spead_test_2012_Sep_06_1646.bof
?tap-start x gbe0 10.0.1.254 8888
?wordwrite n_beng 0 0x1
?wordwrite bf0_id 0 0x0
?wordwrite bf0_gbe_out_port0 0 8888
?wordwrite bf0_gbe_out_ip0 0 0x0a000168
?wordwrite ratio 0 200
?wordwrite control 0 0x9
?wordwrite control 0 0x6



tcpdump spead to pipespead

tcpdump -B 102400 -v -i eth4 -nn -U -w - -s 0 port 7148 | ssh -c arcfour 192.168.4.138 -ladam /home/adam/spead/utils/pipespead localhost 8888

consider increasing /proc/sys/kernel/shmmax

sudo sh -c "echo $[1000*1024*1024] > /proc/sys/kernel/shmmax"

ITEM_DESCRIPTOR SPEAD ID [0x5]
  provide meta data for incomming spead stream
  can be issued at any time including during a stream
  could contain a STREAM_CONTROL item with value 1 for item descriptor reissue
  item descriptors are self contained spead packets with spead header
  they contain at least the following items

  ItemDescriptorID 
      - [0x0014] shape 1 uint immediate address
      - num code to id the item we are describing bitwidth (ItemPointerWidth - HeapAddressWidth-1)

  ItemDescriptorName 
      - [0x0010] shape 1xN char array immediate or direct address
      - A short string nameing the variable contained in this item

  ItemDescriptorDescription 
      - [0x0011] shape 1xN char array immediate or direct address
      - A ASCII string explaining the variables use and packing scheme

  ItemDescriptorType
      - [0x0013] shape 1xN binary packed direct addressed
      - Binary vector representing the data type (signed or unsigned int, float, string, boolean etc) 
        and number of bits per value.
      - Contains the unpack string for parser how to unpack the payload
      - Can contain one or more unpack directives with each directive referring to a consecutive data
        type in the payload
      - each directive has the following form: unpack_type[bit_length|ItemIdentifier]
        unpacktype
          0 0x0030 interpret remaining XX bits as an ItemIdentifier
                   e.g. can ref another item allowing hierarchical constructs where the bit_length or 
                   ItemIdentifier field has the same size as your SPEAD flavour's ItemIdentifierWidth
          i 0x0069 signed integer
          u 0x0075 unsigned integer
          f 0x0066 IEEE float
          c 0x0063 ASCII character
          b 0x0062 boolean

  ItemDescriptorShape
      - [0x0012] shape 1xN binary packed
      - A binary vector representing the size along each dimension

  ItemDescriptorDType
      - [0x0015] shape 1xN string representation of numpy dtype
      - OPTIONAL string specifying the shape and type of this item using numpy dtype string syntax??

STREAM_CONTROL SPEAD ID  [0x6]


Create c api for spead


Observations of the PySPEAD impl

itemgroups 
  have items with names
    ig.keys is all the items in the item group
    ig.add_item(name,description,shape,format)
      e.g. data_timestamp (from unix epoch ms for current visibility sample) (1) (uint 64)
           vis_data (complex vis spectrum for single time dump) (
           
  items ig.get_item(mame)


receiver
udp 
  port 8888
  pkt-count 1024
  buffersize 51200000 
  receiver creates a heap of itemgroups
  Ringbuffer (seems to have threads)
    has slots or RingItems




 transmitter
 udp
  port 8888

cat /dev/zero | pv -br | socat -b50000 - UDP:ip6-localhost:8888 > /dev/null


Receiver data path
==================
|->unpack header
|  unpack items
|  check for stream termination
|  store packet
|    get associated heap / create a new heap
|  * add packet to heap
|    check for heap completeness
|-----|
       \
        SHIP HEAP
     *   finalize heap
         |
          \
           process heap
            loop through items
            |
            |\
            | LOOK for SPEAD ITEM DESCRIPTOR
            |   create a temp packet
            |   copy item val into packet data
            |   unpack header
            |   unpack items
            |   create temp heap
            |   add packet
    *       |   finalize packet
            |   |
            |    \
            |     Loop through items for stream definition
            |
             \
              Do stuff with other items

Callgrind analysis
  worker thread spends most time in (spead_heap_finalize)
  
  spead_heap_finalize
    loops through items and mallocs each one
    lots of mallocs (slow)

S-P-E-A-D Description

spead_packet
  heap count
  heap length
  number of items
  is stream control termination
  payload length
  payload offset
  data[SPEAD_MAX_PACKET_LEN] 9200Bytes
  pointer into data where payload starts
  pointer to next spead packet

spead_heap
  is valid
  heap count
  heap length
  has all packets
  pointer to head packet
  pointer to last packet
  pointer to head item
  pointer to last item

spead_item
  is valid
  id
  pointer to char data
  length of data
  pointer to next item

Spead heap finalize
  start with 1st packet in the heap
    loop thought n_items in current packet
      get item pointer from SPEAD_ITEM macro with packet data ptr and i
      get item id from SPEAD_ITEM_ID macro with item ptr
      skip items with ids HEAP_CNT, PAYLOAD_OFF, PAYLOAD_LEN and STREAM_CTRL
      create a new item
      get ITEM_MODE from item ptr
        if DIRECTADDRR
          get the offset from SPEAD_ITEM_ADDR(item ptr)


  /* use setsockopt() to request that the kernel join a multicast group */
  mreq.imr_multiaddr.s_addr=inet_addr(HELLO_GROUP);
  mreq.imr_interface.s_addr=htonl(INADDR_ANY);
  if (setsockopt(fd,IPPROTO_IP,IP_ADD_MEMBERSHIP,&mreq,sizeof(mreq)) < 0) {
    perror("setsockopt");
    exit(1);
  }
