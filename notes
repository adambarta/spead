consider increasing /proc/sys/kernel/shmmax

sudo sh -c "echo $[1000*1024*1024] > /proc/sys/kernel/shmmax"


Create c api for spead

itemgroups 
  have items with names
    ig.keys is all the items in the item group
    ig.add_item(name,description,shape,format)
      e.g. data_timestamp (from unix epoch ms for current visibility sample) (1) (uint 64)
           vis_data (complex vis spectrum for single time dump) (
           
  items ig.get_item(mame)


receiver
udp 
  port 8888
  pkt-count 1024
  buffersize 51200000 
  receiver creates a heap of itemgroups
  Ringbuffer (seems to have threads)
    has slots or RingItems




 transmitter
 udp
  port 8888

cat /dev/zero | pv -br | socat -b50000 - UDP:ip6-localhost:8888 > /dev/null


Receiver data path
==================
|->unpack header
|  unpack items
|  check for stream termination
|  store packet
|    get associated heap / create a new heap
|  * add packet to heap
|    check for heap completeness
|-----|
       \
        SHIP HEAP
     *   finalize heap
         |
          \
           process heap
            loop through items
            |
            |\
            | LOOK for SPEAD ITEM DESCRIPTOR
            |   create a temp packet
            |   copy item val into packet data
            |   unpack header
            |   unpack items
            |   create temp heap
            |   add packet
    *       |   finalize packet
            |   |
            |    \
            |     Loop through items for stream definition
            |
             \
              Do stuff with other items

Callgrind analysis
  worker thread spends most time in (spead_heap_finalize)
  
  spead_heap_finalize
    loops through items and mallocs each one
    lots of mallocs (slow)

S-P-E-A-D Description

spead_packet
  heap count
  heap length
  number of items
  is stream control termination
  payload length
  payload offset
  data[SPEAD_MAX_PACKET_LEN] 9200Bytes
  pointer into data where payload starts
  pointer to next spead packet

spead_heap
  is valid
  heap count
  heap length
  has all packets
  pointer to head packet
  pointer to last packet
  pointer to head item
  pointer to last item

spead_item
  is valid
  id
  pointer to char data
  length of data
  pointer to next item



